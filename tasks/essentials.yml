---
- name: Update system
  become: true
  package:
    update_cache: yes
    upgrade: yes
  when: ansible_facts['distribution'] != "Fedora"

- name: Install basic packages
  become: true
  package:
    name: "{{ item }}"
    state: latest
  with_items:
    - "{{ packages.cli }}"
    - "{{ packages.gui }}"
    - "{{ packages.nvim }}"
  when: ansible_facts['distribution'] != "Fedora"
  ignore_errors: true

- name: Update system
  become: true
  dnf:
    name: "*"
    state: latest
  when: ansible_facts['distribution'] == "Fedora"

- name: Add Repos
  become: true
  shell: '{{ item }}'
  with_items:
    - 'dnf config-manager --add-repo https://raw.githubusercontent.com/rpmsphere/rpmsphere.github.io/master/rpmsphere.repo'
    - 'dnf config-manager --add-repo https://raw.githubusercontent.com/rpmsphere/rpmsphere.github.io/master/rpmsphere.repo'
    - 'sudo dnf copr enable atim/lazygit -y'
    - 'sudo dnf config-manager --add-repo https://brave-browser-rpm-release.s3.brave.com/x86_64/'
    - 'sudo rpm --import https://brave-browser-rpm-release.s3.brave.com/brave-core.asc'
  when: ansible_facts['distribution'] == "Fedora"

- name: Install basic packages
  become: true
  dnf:
    name: "{{ item }}"
    state: latest
  with_items:
    - "{{ packages.cli }}"
    - "{{ packages.gui }}"
    - "{{ packages.nvim }}"
    - "{{ packages.rpm }}"
    - "{{ packages.npm }}"
  when: ansible_facts['distribution'] == "Fedora"
  ignore_errors: true

- name: Install ueberzug
  pip:
    name: ueberzug
  when: ansible_facts['distribution'] != "Fedora"

- name: Clone dotfiles
  git:
    repo: "{{ dotfiles }}"
    dest: ~/dotfiles
    force: yes
    track_submodules: yes

- name: Set zsh as default shell
  become: true
  user:
    name: "{{ user }}"
    shell: /usr/bin/zsh

- name: Clone nvim config
  git:
    repo: "{{ nvim }}"
    dest: ~/.config/nvim
    force: yes

- name: Install Vim-Plug
  shell: sh -c 'curl -fLo "${XDG_DATA_HOME:-$HOME/.local/share}"/nvim/site/autoload/plug.vim --create-dirs https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim'

- name: Copy Nvim config for root user
  become: true
  shell: 'mkdir -p /root/.config/nvim/ && cp /home/{{ user }}/.config/nvim/base-init.vim /root/.config/nvim/'

- name: Unstow dotfiles
  shell:
    cmd: stow -R *
    chdir: ~/dotfiles
